-- удаление таблиц, а также все ограничений, связанных с ними
drop table Payment_Service cascade constraints;
drop table Credits cascade constraints;
drop table Card cascade constraints;
drop table Account_Transaction cascade constraints;
drop table Currency_Exchange_Rate cascade constraints;
drop table User_Support_Request cascade constraints;
drop table User_Profile cascade constraints;
drop table User_Account cascade constraints;
drop table App_User cascade constraints;
drop table Currency cascade constraints;
drop table Credit_Type cascade constraints;

-- создание таблицы, содержащую информацию о валюте с первичным ключом ID
create table Currency (
                       ID number(10) generated by default on null as identity, -- идентификатор валюты, первичный ключ
                       NAME varchar2(100) not null, -- название валюты  
                       CODE varchar2(3) not null, -- код валюты
                       constraint PK_Currency primary key (ID) -- определение ограничения PK_Currency для первичного ключа для таблицы
);

-- создание таблицы, содержащую информацию о пользователе с первичным ключом ID
create table App_User (
                       ID number(10) generated by default on null as identity, -- идентификатор пользователя, первичный ключ
                       LOGIN nvarchar2(255) not null, -- логин пользователя
                       PASSWORD nvarchar2(255) not null, -- пароль пользователя
                       constraint User_PK primary key (ID) -- определение ограничения User_PK для первичного ключа для таблицы
);

-- создание таблицы, содержащую информацию об аккаунте пользователя с первичным ключом ID
create table User_Account (
                           ID number(10) generated by default on null as identity, -- идентификатор аккаунта, первичный ключ
                           NAME nvarchar2(50) not null, -- название аккаунта
                           CURRENCY varchar2(4) not null, -- код валюты
                           AMOUNT number(15,2) default 0.0, -- баланс аккаунта с точностью до двух десятичных знаков	
                           USER_ID number(10) not null, -- идентификатор пользователя, внешний ключ, ссылается на столбец ID в таблице App_User
                           constraint PK_Account primary key (ID), -- определение ограничения PK_Account для первичного ключа для таблицы
                           constraint FK_User foreign key (USER_ID) references App_User (ID) -- определение ограничения FK_User для внешнего ключа для таблицы
);

-- создание таблицы, содержащую более подробную информацию о пользователе с первичным ключом ID
create table User_Profile (
                           ID number(10) generated by default on null as identity, -- идентификатор дополнительной информации о пользователе, первичный ключ
                           USER_ID number(10) not null, -- идентификатор пользователя, внешний ключ, ссылается на столбец ID в таблице App_User
                           FIRST_NAME nvarchar2(50) not null, -- имя пользователя
                           LAST_NAME nvarchar2(50) not null, -- фамилия пользователя
                           MIDDLE_NAME nvarchar2(50), -- второе имя пользователя
                           ADDRESS nvarchar2(255), -- адресс пользователя
                           BIRTH_DATE date, -- день рождения пользователя
                           EMAIL nvarchar2(100), -- электронная почта пользователя
                           PASSPORT_NUM nvarchar2(50) not null, -- номер паспорта пользователя
                           PHONE_NUMBER nvarchar2(50), -- номер телефона пользователя
                           constraint PK_User_Profile primary key (ID), -- определение ограничения PK_User_Profile для первичного ключа ID для таблицы 
                           constraint FK_User_Profile_User foreign key (USER_ID) references App_User (ID) -- определение ограничения FK_User_Profile_User для внешнего ключа USER_ID для таблицы
);

-- создание таблицы, содержащую более подробную информацию
create table User_Support_Request (
                                   ID number(10) generated by default on null as identity, -- идентификатор запроса поддержки, первичный ключ
                                   TYPE nvarchar2(50), -- тип запроса поддержки
                                   CONTENT clob, -- тип запроса поддержки
                                   DATE_TIME timestamp, -- дата и время создания запроса
                                   ACCOUNT_ID number(10) not null, -- идентификатор учетной записи пользователя, внешний ключ, ссылается на столбец ID в таблице Account
                                   constraint PK_User_Support_Request primary key (ID), -- определение ограничения PK_User_Support_Reques для первичного ключа ID для таблицы
                                   constraint FK_User_Support_Request_Account foreign key (ACCOUNT_ID) references User_Account(ID) -- определение ограничения FK_User_Support_Request_Account для внешнего ключа ACCOUNT_ID  для таблицы 
);

-- создание таблицы, содержащую более подробную информацию о курсе обмена валюты
create table Currency_Exchange_Rate (
                                     ID	number(10) generated by default on null as identity, -- идентификатор курса обмена, первичный ключ
                                     SOURCE_CURR_ID number(10) not null, -- идентификатор исходной валюты, внешний ключ (ссылается на столбец ID в таблице Currency)
                                     TARGET_CURR_ID number(10) not null, -- идентификатор целевой валюты, внешний ключ (ссылается на столбец ID в таблице Currency)
                                     RATE number(15, 2) not null, -- обменный курс между исходной и целевой валютами
                                     RATE_DATE date not null, -- дата, на которую установлен курс обмена
                                     constraint PK_Currency_Exchange_Rate primary key (ID), -- определение ограничения PK_Currency_Exchange_Rate для первичного ключа ID в таблице
                                     constraint FK_Currency_Exchange_Rate_Source foreign key (SOURCE_CURR_ID) references Currency(ID), -- определение ограничения FK_Currency_Exchange_Rate_Source для внешнего ключа SOURCE_CURR_ID, который ссылается на столбец ID в таблице Currency
                                     constraint FK_Currency_Exchange_Rate_Target foreign key (TARGET_CURR_ID) references Currency(ID) -- определение ограничения FK_Currency_Exchange_Rate_Target для внешнего ключа TARGET_CURR_ID, который ссылается на столбец ID в таблице Currency
);

-- создание таблицы, содержащую более подробную информацию о транзакции
create table Account_Transaction (
                                  ID number(10) generated by default on null as identity, -- идентификатор транзакции, первичный ключ
                                  ACCOUNT_ID_FROM	number(10) not null, -- идентификатор аккаунта, откуда происходит транзакция, внешний ключ, который ссылается на столбец ID в таблице Acount
                                  ACCOUNT_ID_TO number(10) not null, -- идентификатор аккаунта, куда направляется транзакция, внешний ключ, который ссылается на столбец ID в таблице Acount
                                  AMOUNT number(15, 2) not null, -- сумма транзакции с точностью до двух десятичных знаков
                                  DATE_TIME timestamp not null, -- дата и время проведения транзакции
                                  constraint PK_Transaction primary key (ID), -- определение ограничения PK_Transaction для первичного ключа ID в таблице
                                  constraint FK_Transaction_Account_From foreign key (ACCOUNT_ID_FROM) references User_Account(ID), -- определение ограничения FK_Transaction_Account_From для внешнего ключа ACCOUNT_ID_FROM, который ссылается на столбец ID в таблице User_Account
                                  constraint FK_Transaction_Account_To foreign key (ACCOUNT_ID_TO) references User_Account(ID) -- определение ограничения FK_Transaction_Account_To для внешнего ключа ACCOUNT_ID_FROM, который ссылается на столбец ID в таблице User_Account
);

-- создание таблицы, содержащую более подробную информацию о типе банковской карты
create table Card (
                   ID number(10) generated by default on null as identity, -- идентификатор типа кредита, первичный ключ
                   TYPE nvarchar2(50) not null, -- тип карты
                   ACCOUNT_ID number(10) not null, -- идентификатор аккаунта, к которому относится карта, внешний ключ (ссылается на столбец ID в таблице Account)
                   CARD_NAME nvarchar2(100), -- название карты
                   DESCRIPTION	nvarchar2(255), -- описание карты
                   STATUS nvarchar2(20), -- статус карты
                   constraint PK_Card primary key (ID), -- определение ограничения PK_Card для первичного ключа ID в таблице
                   constraint FK_Card_Account foreign key (ACCOUNT_ID) references User_Account(ID) -- определение ограничения FK_Card_Account для внешнего ключа ACCOUNT_ID, который ссылается на столбец ID в таблице User_Account 
);

-- создание таблицы, содержащую более подробную информацию о типе банковской карты
create table Credit_Type (
                          ID number(10) generated by default on null as identity, -- идентификатор типа кредита, первичный ключ
                          TYPE nvarchar2(50) not null, -- тип кредита
                          CREDIT_NAME	nvarchar2(100) not null, -- название кредита
                          DESCRIPTION	nvarchar2(255) not null, -- описание типа кредита
                          constraint PK_Credit_Type primary key (ID) -- определение ограничения PK_Credit_Type для первичного ключа ID таблицы
);

-- создание таблицы, содержащую более подробную информацию о платежном сервисе
create table Payment_Service (
                              ID number(10) generated by default on null as identity, -- идентификатор платёжного сервиса, первичный ключ
                              NAME nvarchar2(100) not null, -- название платежного сервиса
                              TYPE nvarchar2(50) not null , -- тип платежного сервиса
                              TRANSACTION_ID	number(10) not null, -- идентификатор транзакции, связанной с платёжным сервисом, внешний ключ, который ссылается на идентификатор транзакции в таблице Transaction
                              constraint PK_Payment_Service primary key (ID), -- определение ограничения PK_Payment_Service для первичного ключа ID таблицы
                              constraint FK_Payment_Service_Transaction foreign key (TRANSACTION_ID) references Account_Transaction(ID) -- определение ограничения FK_Payment_Service_Transaction для внешнего ключа TRANSACTION_ID, который ссылается на столбец ID в таблице Account_Transaction 
);

-- создание таблицы, содержащую более подробную информацию о кредите
create table Credits (
                      ID number(10) generated by default on null as identity, -- идентификатор кредита, первичный ключ
                      CREDIT_TYPE_ID number(10) not null, -- идентификатор типа кредита, внешний ключ (ссылается на столбец ID в таблице Credit_Type)
                      ACCOUNT_ID number(10) not null, -- идентификатор аккаунта, к которому относится кредит, внешний ключ (ссылается на столбец ID в таблице Account)
                      AMOUNT number(15, 2) not null, -- сумма кредита с точностью до двух десятичных знаков
                      constraint PK_Credits primary key (ID), -- опредление ограничения PK_Credits для первичного ключа ID
                      constraint FK_Credits_CreditType foreign key (CREDIT_TYPE_ID) references Credit_Type(ID), -- определение ограничения FK_Credits_CreditType для внешнего ключа CREDIT_TYPE_ID, который ссылается на столбец ID в таблице Credit_Type
                      constraint FK_Credits_Account foreign key (ACCOUNT_ID) references User_Account(ID) -- определение ограничения FK_Credits_Account для внешнего ключа ACCOUNT_ID, который ссылается на столбец ID в таблице User_Account
);


