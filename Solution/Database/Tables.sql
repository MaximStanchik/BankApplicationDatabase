alter session set container = BANK_APP_PDB;

drop table admin_user.Payment_Service cascade constraints;
drop table admin_user.Credits cascade constraints;
drop table admin_user.Card cascade constraints;
drop table admin_user.Account_Transaction cascade constraints;
drop table admin_user.Currency_Exchange_Rate cascade constraints;
drop table admin_user.User_Support_Requests cascade constraints;
drop table admin_user.User_Profile cascade constraints;
drop table admin_user.User_Account cascade CONSTRAINTS;
drop table admin_user.App_User cascade constraints;
drop table admin_user.Currency cascade constraints;
drop table admin_user.Credit_Type cascade constraints;

SELECT * FROM admin_user.Payment_Service;
SELECT * FROM admin_user.Card;
SELECT * FROM admin_user.Credits;
SELECT * FROM admin_user.Account_Transaction;
SELECT * FROM admin_user.Currency_Exchange_Rate;
SELECT * FROM admin_user.User_Support_Requests;
SELECT * FROM admin_user.User_Profile;
SELECT * FROM admin_user.User_Account;
SELECT * FROM admin_user.App_User;
SELECT * FROM admin_user.Currency;
SELECT * FROM admin_user.Credit_Type; 

create table admin_user.Currency ( 
                       ID number(10) generated by default on null as identity,
                       NAME varchar2(100) not null, 
                       CODE varchar2(3) not null, 
                       constraint PK_Currency primary key (ID)
);

create table admin_user.App_User ( 
                       ID number(10) generated by default on null as identity, 
                       LOGIN nvarchar2(255) not null, 
                       PASSWORD nvarchar2(255) not null, 
                       constraint User_PK primary key (ID)
);

create table admin_user.User_Account (
                           ID number(10) generated by default on null as identity, 
                           ACCOUNT_NUMBER nvarchar2(16) not null,
                           CURRENCY_ID number(3) not null,
                           AMOUNT number(15,2) default 0.0, 
                           USER_ID number(10) not null,
                           constraint PK_Account primary key (ID), 
                           constraint FK_Currency foreign key (CURRENCY_ID) references admin_user.Currency(ID), 
                           constraint FK_User foreign key (USER_ID) references admin_user.App_User (ID) 
);

create table admin_user.User_Profile ( 
                           ID number(10) generated by default on null as identity,
                           USER_ID number(10) not null, 
                           FIRST_NAME nvarchar2(50) not null, 
                           LAST_NAME nvarchar2(50) not null, 
                           MIDDLE_NAME nvarchar2(50),
                           ADDRESS nvarchar2(255), 
                           BIRTH_DATE date,
                           EMAIL nvarchar2(100), 
                           PASSPORT_NUM nvarchar2(50) not null, 
                           PHONE_NUMBER nvarchar2(50), 
                           constraint PK_User_Profile primary key (ID),
                           constraint FK_User_Profile_User foreign key (USER_ID) references admin_user.App_User (ID) 
);

create table admin_user.User_Support_Requests (
                                   ID number(10) generated by default on null as identity, 
                                   CONTENT clob, 
                                   DATE_TIME timestamp, 
                                   USER_ID number(10) not null, 
                                   constraint PK_User_Support_Request primary key (ID), 
                                   constraint FK_User_Support_Request_Account foreign key (USER_ID) references admin_user.App_User(ID)
);

create table admin_user.Currency_Exchange_Rate ( 
    							   ID number(10) generated by default on null as identity,
    							   CURR_ID number(10) not null,
    							   BUY number(15, 4),
    							   SALE number(15, 4),
    							   POSTING_DATE date not null,
    							   constraint PK_Currency_Exchange_Rate primary key (ID),
    							   constraint FK_Currency_Exchange_Rate_Target foreign key (CURR_ID) references admin_user.Currency(ID)
);

create table admin_user.Account_Transaction (
                                  ID number(10) generated by default on null as identity, 
                                  ACCOUNT_ID_FROM	number(10) not null, 
                                  ACCOUNT_ID_TO number(10) not null, 
                                  AMOUNT number(15, 2) not null, 
                                  DATE_TIME timestamp not null, 
                                  CURRENCY_ID number(10),
                                  constraint PK_Transaction primary key (ID), 
                                  constraint FK_Transaction_Currency foreign key (CURRENCY_ID) references admin_user.Currency(ID), 
                                  constraint FK_Transaction_Account_From foreign key (ACCOUNT_ID_FROM) references admin_user.User_Account(ID), 
                                  constraint FK_Transaction_Account_To foreign key (ACCOUNT_ID_TO) references admin_user.User_Account(ID) 
);

create table admin_user.Card ( 
                   ID number(10) generated by default on null as identity, 
                   ACCOUNT_ID number(10) not null, 
                   CARD_NAME nvarchar2(100), 
                   CARD_NUMBER number(16) not null, 
                   DESCRIPTION	nvarchar2(255),
                   STATUS nvarchar2(20) check (status IN ('Active', 'Blocked')),  
                   PAYMENT_SERVICE number(10) not null,
                   constraint PK_Card primary key (ID),
                   constraint FK_Card_Account foreign key (ACCOUNT_ID) references admin_user.User_Account(ID), 
                   CONSTRAINT FK_Card_Payment_Service FOREIGN KEY (PAYMENT_SERVICE) REFERENCES admin_user.Payment_Service(ID) 
);

create table admin_user.Credit_Type ( 
                          ID number(10) generated by default on null as identity, 
                          TYPE nvarchar2(50) not null, 
                          CREDIT_NAME	nvarchar2(100) not null, 
                          DESCRIPTION	nvarchar2(255) not null, 
                          constraint PK_Credit_Type primary key (ID)
);

create table admin_user.Payment_Service (
                              ID number(10) generated by default on null as identity, 
                              NAME nvarchar2(100) not null,
                              TYPE nvarchar2(50) not null ,
                              constraint PK_Payment_Service primary key (ID)
);

create table admin_user.Credits (  
                      ID number(10) generated by default on null as identity, 
                      CREDIT_TYPE_ID number(10) not null, 
                      ACCOUNT_ID number(10), 
                      AMOUNT number(15, 2) not null,
                      ISSUED_DATE DATE, 
    				  MATURITY_DATE DATE,
    				  INTEREST_RATE NUMBER(5, 2),
    				  DEBT_AMOUNT NUMBER(15, 2), 
    				  REMAINING_AMOUNT NUMBER(15, 2) DEFAULT 0,
                      STATUS char(8) check (status IN ('Active', 'Paid', 'Expired', 'Canceled', 'Pending')),
                      CURRENCY_ID number(3),
    				  PAYMENT_AMOUNT NUMBER(15, 2) DEFAULT 0,
    				  PAYMENT_FREQUENCY VARCHAR2(30) CHECK (PAYMENT_FREQUENCY IN ('Once a month', 'Once every three months', 'Once every six months')),
    				  LOAN_TERM NUMBER CHECK (LOAN_TERM IN (1, 2, 3, 4, 5, 8, 10, 13, 15)),
    				  LOAN_PURPOSE VARCHAR2(255),
    				  TOTAL_AMOUNT NUMBER(15, 2),
    				  PAYMENT_DAY NUMBER CHECK (PAYMENT_DAY BETWEEN 1 AND 28),
                      constraint PK_Credits primary key (ID), 
                      CONSTRAINT FK_Credits_Currency_Id FOREIGN KEY (CURRENCY_ID) REFERENCES admin_user.Currency(ID); 
                      constraint FK_Credits_CreditType foreign key (CREDIT_TYPE_ID) references admin_user.Credit_Type(ID),
                      constraint FK_Credits_Account foreign key (ACCOUNT_ID) references admin_user.User_Account(ID) 
);